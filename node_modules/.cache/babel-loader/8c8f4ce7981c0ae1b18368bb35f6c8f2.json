{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sacam\\\\Desktop\\\\mymovielist\\\\src\\\\movie\\\\movie.js\";\nimport React, { Component } from 'react';\nimport Media from 'react-bootstrap/Media';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../App.css';\n\nconst axios = require('axios');\n\nclass Movie extends Component {\n  constructor(props) {\n    super(props);\n    state = {\n      estandar: undefined,\n      actore: undefined,\n      escritore: undefined,\n      directore: undefined,\n      video: undefined\n    };\n  }\n\n  async componentDidMount() {\n    let number = this.props.pelicula.split(\"/\")[1];\n    const response = await axios.get(\"https://api.themoviedb.org/3/movie/\" + number + \"?api_key=466c19159235f9ce92fe9604a953aba2&language=es\");\n    console.log(response);\n    let superaux = [];\n    superaux.push(response.data);\n    console.log(\"MAMA\");\n    const response2 = await axios.get(\"https://api.themoviedb.org/3/movie/\" + number + \"/credits?api_key=466c19159235f9ce92fe9604a953aba2\");\n    console.log(response2);\n    let i = 0;\n    let actores = [];\n    let escritores = [];\n    let directores = [];\n\n    for (i = 0; i < 3; i++) {\n      actores.push(response2.data.cast[i]);\n    }\n\n    response2.data.crew.forEach(element => {\n      if (element.department == \"Writing\") {\n        escritores.push(element);\n      } else if (element.department == \"Directing\") {\n        directores.push(element);\n      }\n    });\n    this.setState({\n      estandar: superaux,\n      actore: actores,\n      escritore: escritores,\n      directore: directores\n    });\n    console.log(\"XDDDDDDDD\");\n    console.log(this.state.estandar[0].release_date);\n  }\n\n  render() {\n    return this.state.estandar === undefined ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"CARGANDO\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"color2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.estandar[0].title, \" \"), React.createElement(\"span\", {\n      className: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"(\", this.state.estandar[0][\"release_date\"].split(\"-\")[0], \")\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"star\",\n      height: \"50px\",\n      width: \"50px\",\n      className: \"mr-3\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/4/44/Plain_Yellow_Star.png\",\n      alt: \"Generic placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"rate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.estandar[0].vote_average, \"/10\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.estandar[0].vote_count))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"movie\",\n      className: \"mr-3\",\n      src: \"https://image.tmdb.org/t/p/w500/\" + this.state.estandar[0].poster_path,\n      alt: \"Generic placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Media.Body, {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"color3\",\n      id: \"rcorners1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.estandar[0].overview), React.createElement(\"p\", {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Director: \"), this.state.directore.map(director => director.name + \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" Writers: \"), this.state.escritore.map(escritor => escritor.name + \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" Stars: \"), this.state.actore.map(actor => actor.name + \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      id: \"video\",\n      width: \"400\",\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"https://www.youtube.com/watch?v=rZD6nMlC3tE\",\n      type: \"video/ogg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), \"Your browser does not support HTML5 video.\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default Movie;","map":{"version":3,"sources":["C:/Users/sacam/Desktop/mymovielist/src/movie/movie.js"],"names":["React","Component","Media","Container","Row","Col","axios","require","Movie","constructor","props","state","estandar","undefined","actore","escritore","directore","video","componentDidMount","number","pelicula","split","response","get","console","log","superaux","push","data","response2","i","actores","escritores","directores","cast","crew","forEach","element","department","setState","release_date","render","title","vote_average","vote_count","poster_path","overview","map","director","name","escritor","actor"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\r\nimport Media from 'react-bootstrap/Media'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport '../App.css';\r\n\r\nconst axios = require('axios');\r\nclass Movie extends Component{\r\n        constructor (props){\r\n            super(props)\r\n            state={estandar:undefined,\r\n                   actore:undefined,\r\n                   escritore:undefined,\r\n                   directore:undefined,\r\n                    video:undefined\r\n            }\r\n        }\r\n        \r\n        async componentDidMount(){\r\n            let number = this.props.pelicula.split(\"/\")[1]\r\n            const response = await axios.get(\"https://api.themoviedb.org/3/movie/\"+number+\"?api_key=466c19159235f9ce92fe9604a953aba2&language=es\")\r\n            console.log(response)\r\n            let superaux = []\r\n            superaux.push(response.data)\r\n            console.log(\"MAMA\")\r\n            const response2 = await axios.get(\"https://api.themoviedb.org/3/movie/\"+number+\"/credits?api_key=466c19159235f9ce92fe9604a953aba2\")\r\n            console.log(response2)\r\n            let i=0;\r\n            let actores=[];\r\n            let escritores=[];\r\n            let directores=[];\r\n            for(i=0; i<3;i++){\r\n                  actores.push(response2.data.cast[i])          \r\n            }\r\n            response2.data.crew.forEach(element => {\r\n                if(element.department==\"Writing\"){\r\n                    escritores.push(element)\r\n                }\r\n               else if(element.department==\"Directing\"){\r\n                    directores.push(element)\r\n                }\r\n    \r\n            });\r\n            \r\n            this.setState({\r\n                estandar:superaux,\r\n                actore:actores,\r\n                escritore:escritores,\r\n                directore:directores\r\n            })\r\n            console.log(\"XDDDDDDDD\")\r\n            console.log(this.state.estandar[0].release_date)\r\n\r\n        }\r\n        render () {\r\n\r\n            return (this.state.estandar===undefined) ?\r\n            (<div>CARGANDO</div>) :\r\n            ( <div>\r\n                <Container fluid>\r\n                    <Row className = \"color2\">\r\n                        <Col className = \"text\">\r\n                            <span className = \"title\">{this.state.estandar[0].title} </span><span className = \"year\">({this.state.estandar[0][\"release_date\"].split(\"-\")[0]})</span>\r\n                        </Col>\r\n                        <Col>    \r\n                            <img\r\n                                id = \"star\"\r\n                                height = \"50px\"\r\n                                width = \"50px\"\r\n                                className=\"mr-3\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/4/44/Plain_Yellow_Star.png\"\r\n                                alt=\"Generic placeholder\"\r\n                            />                         \r\n                        </Col>\r\n                        <Col>\r\n                            <span className = \"rate\">{this.state.estandar[0].vote_average}/10</span>\r\n                            <br></br>\r\n                            <span className = \"cont\">{this.state.estandar[0].vote_count}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <img\r\n                                id = \"movie\"\r\n                                className=\"mr-3\"\r\n                                src={\"https://image.tmdb.org/t/p/w500/\"+this.state.estandar[0].poster_path}\r\n                                alt=\"Generic placeholder\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <Media.Body className = \"text\">\r\n                                    <p className = \"color3\" id = \"rcorners1\" >\r\n                                        {this.state.estandar[0].overview}           \r\n                                    </p>\r\n                                        <p align = \"left\"> \r\n                                            <strong> Director: </strong> \r\n                                            {this.state.directore.map(\r\n                                                 (director) => director.name+\" \"\r\n                                            )}\r\n                                             <br /> \r\n                                            <strong> Writers: </strong> \r\n                                            {this.state.escritore.map(\r\n                                                 (escritor) => escritor.name+\" \"\r\n                                            )}\r\n                                             <br /> \r\n                                            <strong> Stars: </strong> \r\n                                            {this.state.actore.map(\r\n                                                 (actor) => actor.name+\" \"\r\n                                            )}\r\n                                             <br /> \r\n                                        </p>\r\n                                </Media.Body>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <video id = \"video\" width=\"400\" controls>\r\n                                        <source src=\"https://www.youtube.com/watch?v=rZD6nMlC3tE\" type=\"video/ogg\"/>\r\n                                        Your browser does not support HTML5 video.\r\n                                    </video>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        \r\n                    </Row>\r\n                </Container>\r\n            </div>)\r\n            \r\n        }\r\n    };\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}